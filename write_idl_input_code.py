def write_kinemetry_idl(plate, ifu):
	'''
    	Creates an input file for kinemetry (.txt file) that has columns of x and y coords, velocity, velocity dispersion,
    	and the errors on both of these values.
    	'''
    	
	file=open('run_kinemetry_iteratively_'+str(plate)+'-'+str(ifu)+'.pro','w')
	file.write(';################################################################'+'\n')
	file.write('; This program is to iteratively read in the mcrx stellar'+'\n')
	file.write('; velocities and fit them first with a varying PA,'+'\n')
	file.write('; then, holding the PA fixed, fit them again and determine'+'\n')
	file.write('; both asymmetry parameters (v and sig).'+'\n')
	file.write(';'+'\n')
	file.write("; The outputs for this program are a file 'myfile_myr_view.txt'"+'\n')
	file.write('; that shows the circular velocity of the best fit model, and'+'\n')
	file.write('; a file text_out_myr_view.txt, which holds the kinematic best'+'\n')
	file.write('; fitting PA and the asymmetry parameters.'+'\n')
	file.write(';'+'\n')
	file.write('; Becky Nevin'+'\n')
	file.write(';###############################################################'+'\n')
	file.write('\n')
	file.write('PRO run_kinemetry_iteratively_'+str(plate)+'-'+str(ifu)+'\n')
	file.write('\n')
	file.write('plateid = '+"'"+str(plate)+'-'+str(ifu)+"'"+'\n')
	file.write("file = 'kinemetry_input_"+str(plate)+"-"+str(ifu)+".txt'"+'\n')
	file.write('file = STRCOMPRESS(file, /REMOVE_ALL)'+'\n')
	file.write('result = FILE_TEST(file)'+'\n')
	file.write('IF result EQ 0 THEN CONTINUE'+'\n')
	file.write('rdfloat, file, xcen, ycen, x_old, y_old, SKIPLIN=1'+'\n')
	file.write('xcen0=xcen[0]-x_old[0]'+'\n')
	file.write('ycen0=ycen[0]-y_old[0]'+'\n')
	file.write('rdfloat, file, num, xbin, ybin, velbin, er_velbin, sigbin, er_sigbin, SKIPLIN=2'+'\n')
	file.write('range = where(ABS(er_velbin/velbin) lt 1 and ABS(er_sigbin/sigbin) lt 1)'+'\n')
	file.write('velbin=velbin[range]'+'\n')
	file.write('er_velbin=er_velbin[range]'+'\n')
	file.write('xbin=xbin[range]'+'\n')
	file.write('ybin=ybin[range]'+'\n')
	file.write('sigbin=sigbin[range]'+'\n')
	file.write('er_sigbin=er_sigbin[range]'+'\n')
	file.write("KINEMETRY, xbin, ybin, velbin, rad, pa, q, cf, X0=xcen, Y0=ycen, ntrm=10, ERROR=er_velbin, name='simulation',er_cf=er_cf, er_pa=er_pa, er_q=er_q, /verbose, /ALL, /plot, /FIXCEN"+'\n')
	file.write('k0 = cf[*,0]'+'\n')
	file.write('k1 = SQRT(cf[*,1]^2 + cf[*,2]^2)'+'\n')
	file.write('k5 = SQRT(cf[*,5]^2 + cf[*,6]^2)'+'\n')
	file.write('k51 = k5/k1'+'\n')
	file.write('erk1 = (SQRT( (cf[*,1]*er_cf[*,1])^2 + (cf[*,2]*er_cf[*,2])^2 ))/k1'+'\n')
	file.write('erk5 = (SQRT( (cf[*,5]*er_cf[*,5])^2 + (cf[*,6]*er_cf[*,6])^2 ))/k5'+'\n')
	file.write('erk51 = ( SQRT( ((k5/k1) * erk1)^2 + erk5^2  ) )/k1'+'\n')
	file.write("PRINT, 'median PA before', MEDIAN(pa)-90"+'\n')
	file.write('index = WHERE(pa GT 180)'+'\n')
	file.write('pa[index] = pa[index]-180'+'\n')
	file.write('KIN_PA = MEDIAN(pa)-90'+'\n')
	file.write("PRINT, 'median PA', KIN_PA"+'\n')
	file.write('KIN_PA_e = MEDIAN(er_pa/pa)'+'\n')
	file.write('PA_before = MEDIAN(pa)-90'+'\n')
	file.write("KINEMETRY, xbin, ybin, velbin, rad, pa, q, cf, X0=xcen,Y0=ycen, ntrm=10, ERROR=er_velbin, name='simulation',RANGEPA=[MEDIAN(pa)-90-1,MEDIAN(pa)-90+1],er_cf=er_cf, er_pa=er_q=er_q,/ALL, /FIXCEN, /plot"+'\n')
	file.write('PAQ1 = [PA_before, MEDIAN(q)]'+'\n')
	file.write('PAQ = Reform(Rebin(PAQ1, 2, 100), 200)'+'\n')
	file.write("PRINT, 'about to do only one term'"+'\n')
	file.write("KINEMETRY, xbin, ybin, velbin, rad, pa, q, cf, X0=xcen,Y0=ycen, ntrm=10, ERROR=er_velbin,  PAQ=PAQ,er_cf=er_cf, er_pa=er_pa, er_q=er_q,velcirc=velCirc,  velkin=velKin, /ALL, /BMODEL, /FIXCEN, /plot"+'\n')
	file.write('print, cf'+'\n')
	file.write('k0 = cf[*,0]'+'\n')
	file.write('k1 = SQRT(cf[*,1]^2 + cf[*,2]^2)'+'\n')
	file.write('k2 = SQRT(cf[*,3]^2 + cf[*,4]^2)'+'\n')
	file.write('k3 = SQRT(cf[*,5]^2 + cf[*,6]^2)'+'\n')
	file.write('k4 = SQRT(cf[*,7]^2 + cf[*,8]^2)'+'\n')
	file.write('k5 = SQRT(cf[*,9]^2 + cf[*,10]^2)'+'\n')
	file.write("PRINT, 'k0', k0"+'\n')
	file.write('elemental_v_asym=dblarr(N_ELEMENTS(pa))'+'\n')
	file.write('FOR I=0, N_ELEMENTS(pa) - 1 DO BEGIN'+'\n')
	file.write('\t'+'k2 = SQRT(cf[i,3]^2 + cf[i,4]^2)'+'\n')
	file.write('\t'+'k3 = SQRT(cf[i,5]^2 + cf[i,6]^2)'+'\n')
	file.write('\t'+'k4 = SQRT(cf[i,7]^2 + cf[i,8]^2)'+'\n')
	file.write('\t'+'k5 = SQRT(cf[i,9]^2 + cf[i,10]^2)'+'\n')
	file.write('\t'+'sum = (k2 + k3 + k4 + k5)/4'+'\n')
	file.write('\t'+'B_1_v = ABS(cf[i,2])'+'\n')
	file.write('\t'+'elemental_v_asym[i]=sum/B_1_v'+'\n')
	file.write('ENDFOR'+'\n')
	file.write('alt_v_asym = MEDIAN(elemental_v_asym)'+'\n')
	file.write("KINEMETRY, xbin, ybin, sigbin, rad, pa, q, cf, X0=xcen, Y0=ycen,ntrm=10, scale=0.5, ERROR=er_sigbin, name='sigma map', PAQ=PAQ, er_cf=er_cf, er_pa=er_pa, er_q=er_q, /verbose, /ALL, /plot, /FIXCEN"+'\n')
	file.write('k0 = cf[*,0]'+'\n')
	file.write('k1 = SQRT(cf[*,1]^2 + cf[*,2]^2)'+'\n')
	file.write('k2 = SQRT(cf[*,3]^2 + cf[*,4]^2)'+'\n')
	file.write('k3 = SQRT(cf[*,5]^2 + cf[*,6]^2)'+'\n')
	file.write('k4 = SQRT(cf[*,7]^2 + cf[*,8]^2)'+'\n')
	file.write('k5 = SQRT(cf[*,9]^2 + cf[*,10]^2)'+'\n')
	file.write('elemental_s_asym=dblarr(N_ELEMENTS(pa))'+'\n')
	file.write('FOR I=0, N_ELEMENTS(pa) - 1 DO BEGIN'+'\n')
	file.write('\t'+'k1 = SQRT(cf[i,1]^2 + cf[i,2]^2)'+'\n')
	file.write('\t'+'k2 = SQRT(cf[i,3]^2 + cf[i,4]^2)'+'\n')
	file.write('\t'+'k3 = SQRT(cf[i,5]^2 + cf[i,6]^2)'+'\n')
	file.write('\t'+'k4 = SQRT(cf[i,7]^2 + cf[i,8]^2)'+'\n')
	file.write('\t'+'k5 = SQRT(cf[i,9]^2 + cf[i,10]^2)'+'\n')
	file.write('\t'+'sum = (k1 + k2 + k3 + k4 + k5)/5'+'\n')
	file.write('\t'+'A_0_v = ABS(cf[i,0])'+'\n')
	file.write('\t'+'elemental_s_asym[i]=sum/A_0_v'+'\n')
	file.write('ENDFOR'+'\n')
	file.write('alt_s_asym = MEDIAN(elemental_s_asym)'+'\n')
	file.write("file_out='myfile_v_"+str(plate)+"-"+str(ifu)+".txt'"+'\n')
	file.write('file_out = STRCOMPRESS(file_out, /REMOVE_ALL)'+'\n')
	file.write("writecol, file_out, xbin, ybin, velbin, er_velbin, velCirc, velKin, fmt='(f,f,f,f,x,f,x,f)'"+'\n')
	file.write("file_out_2 = 'text_out_"+str(plate)+"-"+str(ifu)+".txt'"+'\n')
	file.write('file_out_2 = STRCOMPRESS(file_out_2, /REMOVE_ALL)'+'\n')
	file.write('K_asym=SQRT(alt_s_asym^2+alt_v_asym^2)'+'\n')
	file.write('writecol, file_out_2, KIN_PA, KIN_PA_e, alt_v_asym, alt_s_asym, K_asym'+'\n')
	file.write("PRINT, 'v_asym', alt_v_asym, 's_asym', alt_s_asym, 'K_TOT', K_asym"+'\n')
	file.write('END'+'\n')
	file.close()




write_kinemetry_idl('8318','12704')
